{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andrewdunn/Dev/udemy/nextjs/meetup_app/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  // fetch data for a single meetup\n  var image = props.image,\n      title = props.title,\n      address = props.address,\n      description = props.description;\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: image,\n    title: title,\n    address: address,\n    description: description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/andrewdunn/Dev/udemy/nextjs/meetup_app/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","image","title","address","description"],"mappings":";;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B;AAD4B,MAEpBC,KAFoB,GAEmBD,KAFnB,CAEpBC,KAFoB;AAAA,MAEbC,KAFa,GAEmBF,KAFnB,CAEbE,KAFa;AAAA,MAENC,OAFM,GAEmBH,KAFnB,CAENG,OAFM;AAAA,MAEGC,WAFH,GAEmBJ,KAFnB,CAEGI,WAFH;AAG5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEH,KADT;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,WAAW,EAAEC;AAJf;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAXQL,a;;AAyDT,eAAeA,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  // fetch data for a single meetup\n  const { image, title, address, description } = props;\n  return (\n    <MeetupDetail\n      image={image}\n      title={title}\n      address={address}\n      description={description}\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\n    \"mongodb+srv://andrew:testtest@cluster0.fwdlpvp.mongodb.net/?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => {\n      params: {\n        meetupId: meetup._id.toString();\n      }\n    }),\n  };\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://andrew:testtest@cluster0.fwdlpvp.mongodb.net/?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\n\n  client.close();\n\n  return {\n    props: {\n      meetupData: selectedMeetup,\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}